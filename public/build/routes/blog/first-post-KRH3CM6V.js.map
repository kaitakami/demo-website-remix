{
  "version": 3,
  "sources": ["browser-route-module:/home/kai/repos/demo-website-remix/app/routes/blog/first-post.mdx?browser", "mdx:/home/kai/repos/demo-website-remix/app/routes/blog/first-post.mdx"],
  "sourcesContent": ["export { default, links, meta } from \"/home/kai/repos/demo-website-remix/app/routes/blog/first-post.mdx\";", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"title\": \"My first about post about... making my first post!\",\n  \"date\": new Date(1639440000000),\n  \"meta\": {\n    \"title\": \"My First Post\",\n    \"description\": \"cool!\"\n  }\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    span: \"span\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.h2>{\"My first about post about... making my first post!\"}</_components.h2>{\"\\n\"}{attributes.date.toDateString()}{\"\\n\"}<_components.h3>{\"First of all how did I get this page to render?\"}</_components.h3>{\"\\n\"}<_components.p>{\"Remix has \"}<_components.a href=\"https://remix.run/docs/en/v1/guides/mdx\">{\"built-in support for MDX\"}</_components.a>{\", it automatically will treat each \"}<_components.code>{\".mdx\"}</_components.code>{\" file witin \"}<_components.code>{\"/routes\"}</_components.code>{\" like a route module. Just like regular components.\\nBasically that means an MDX file is automatically a page! There's really not much work to do.\"}</_components.p>{\"\\n\"}<_components.h3>{\"Syntax Highlighting\"}</_components.h3>{\"\\n\"}<_components.p>{\"The only thing I really needed to setup was some syntax highlighting, e.g. you should notice the following code block should already be pre-styled with my currently selected theme:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-js\"><_components.span className=\"hljs-keyword\">{\"function\"}</_components.span>{\" \"}<_components.span className=\"hljs-title hljs-function\">{\"helloWorld\"}</_components.span>{\"(\"}<_components.span className=\"hljs-params\" />{\") {\\n  \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"'hello!'\"}</_components.span>{\";\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"To achieve this first of all I had to update the base \"}<_components.code>{\"remix.config.js\"}</_components.code>{\" to now have the \"}<_components.code>{\"mdx\"}</_components.code>{\" property.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-js\"><_components.span className=\"hljs-variable hljs-language\">{\"module\"}</_components.span>{\".\"}<_components.span className=\"hljs-property\">{\"exports\"}</_components.span>{\" = {\\n  \"}<_components.span className=\"hljs-comment\">{\"// ... existing config here\"}</_components.span>{\"\\n  \"}<_components.span className=\"hljs-attr\">{\"mdx\"}</_components.span>{\": \"}<_components.span className=\"hljs-keyword\">{\"async\"}</_components.span>{\" (filename) => {\\n    \"}<_components.span className=\"hljs-keyword\">{\"const\"}</_components.span>{\" [rehypeHighlight] = \"}<_components.span className=\"hljs-keyword\">{\"await\"}</_components.span>{\" \"}<_components.span className=\"hljs-title hljs-class\">{\"Promise\"}</_components.span>{\".\"}<_components.span className=\"hljs-title hljs-function\">{\"all\"}</_components.span>{\"([\\n      \"}<_components.span className=\"hljs-title hljs-function\">{\"import\"}</_components.span>{\"(\"}<_components.span className=\"hljs-string\">{\"'rehype-highlight'\"}</_components.span>{\").\"}<_components.span className=\"hljs-title hljs-function\">{\"then\"}</_components.span>{\"(\"}<_components.span className=\"hljs-function\">{\"(\"}<_components.span className=\"hljs-params\">{\"mod\"}</_components.span>{\") =>\"}</_components.span>{\" mod.\"}<_components.span className=\"hljs-property\">{\"default\"}</_components.span>{\"),\\n    ]);\\n    \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" {\\n      \"}<_components.span className=\"hljs-attr\">{\"rehypePlugins\"}</_components.span>{\": [rehypeHighlight],\\n    };\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Notice that we are using \"}<_components.code>{\"rehype-highlight\"}</_components.code>{\" as a plugin which ultimately will use \"}<_components.code>{\"highlight.js\"}</_components.code>{\" behind the scenes to transform our html.\"}</_components.p>{\"\\n\"}<_components.p>{\"There are actually other ways to do this, for example you could also use a remark plugin instead or a plugin which uses PrismJS.\\nHonestly this MDX ecosystem is still very new to me so I'm not quite sure yet what's the best approach. Will look into that more later!\"}</_components.p>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"rehype-highlight\"}</_components.code>{\" plugin was the example used in the docs so I just ran with it.\"}</_components.p>{\"\\n\"}<_components.p>{\"Anyways, once you have that config change I then started configuring my blog routing.\"}</_components.p>{\"\\n\"}<_components.h3>{\"Let's take a moment to talk about the routing\"}</_components.h3>{\"\\n\"}<_components.p>{\"As an example I currently (at the time of writing) have the following files:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-bash\">{\"app/routes/blog.tsx --> The layout \"}<_components.span className=\"hljs-string\">{\"\\\"parent\\\"\"}</_components.span>{\"\\napp/routes/blog/index.tsx --> The \"}<_components.span className=\"hljs-string\">{\"\\\"index route\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" /blog\\napp/routes/blog/first-post.mdx --> The post you\"}<_components.span className=\"hljs-string\">{\"'re reading!\\n\"}</_components.span></_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The distinction between \"}<_components.code>{\"blog.tsx\"}</_components.code>{\" and \"}<_components.code>{\"blog/index.tsx\"}</_components.code>{\" here was initially very confusing to me.\\nHowever it started to make a little bit more sense when I remeber how the same sort of ideas work with React Route 6.\"}</_components.p>{\"\\n\"}<_components.p>{\"For example in React Router that routing might look like this:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-jsx\">{\"<\"}<_components.span className=\"hljs-title hljs-class\">{\"Routes\"}</_components.span>{\">\\n  \"}<_components.span className=\"xml\"><_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"path\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"\\\"/\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"App\"}</_components.span>{\" />\"}</_components.span>{\"}>\\n    \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"index\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"Home\"}</_components.span>{\" />\"}</_components.span>{\"} />\\n    \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"path\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"\\\"blog\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"Blog\"}</_components.span>{\" />\"}</_components.span>{\"}>\\n      \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"path\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"\\\"first-post\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"FirstPost\"}</_components.span>{\" />\"}</_components.span>{\"} />\\n      \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"index\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"BlogIndex\"}</_components.span>{\" />\"}</_components.span>{\"} />\\n    \"}<_components.span className=\"hljs-tag\">{\"</\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\">\"}</_components.span>{\"\\n  \"}<_components.span className=\"hljs-tag\">{\"</\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\">\"}</_components.span></_components.span>{\"\\n</\"}<_components.span className=\"hljs-title hljs-class\">{\"Routes\"}</_components.span>{\">\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"In the above example the element \"}<_components.code>{\"<Blog />\"}</_components.code>{\" basically houses the common layout/logic for all of the children below it. It specifically needs to render an \"}<_components.code>{\"<Outlet />\"}</_components.code>{\" to define where the nested routes will render.\\nThat's basically the same exact idea here in Remix, except that structure is being defined using the file system. Once I wrapped my head around that it made a litte bit more sense.\"}</_components.p>{\"\\n\"}<_components.h3>{\"Now back to syntax highlighting...\"}</_components.h3>{\"\\n\"}<_components.p>{\"Now that we have that structure in place, the only thing left to do is setup up our \"}<_components.code>{\"highlight.js\"}</_components.code>{\" CSS file to specifically load in \"}<_components.em>{\"only\"}</_components.em>{\" for our blog routing. This is because we likely won't need those styles anywhere else but in the blog posts.\"}</_components.p>{\"\\n\"}<_components.p>{\"In addition to that Remix seems to optimize what CSS is sent \"}<_components.em>{\"per page\"}</_components.em>{\". Meaning to enable our syntax highlighting we'd have to include the styles in each page. That seems overkill, so instead we're going to load it inside our \"}<_components.code>{\"blog.tsx\"}</_components.code>{\" (which again remember wraps the underlying nested children) so that we only define it once across all blog posts.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-ts\"><_components.span className=\"hljs-keyword\">{\"import\"}</_components.span>{\" styles \"}<_components.span className=\"hljs-keyword\">{\"from\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"'highlight.js/styles/github-dark-dimmed.css'\"}</_components.span>{\"; \"}<_components.span className=\"hljs-comment\">{\"// change this to your desired theme\"}</_components.span>{\"\\n\"}<_components.span className=\"hljs-keyword\">{\"import\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"type\"}</_components.span>{\" { \"}<_components.span className=\"hljs-title hljs-class\">{\"LinksFunction\"}</_components.span>{\", \"}<_components.span className=\"hljs-title hljs-class\">{\"LoaderFunction\"}</_components.span>{\" } \"}<_components.span className=\"hljs-keyword\">{\"from\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"'remix'\"}</_components.span>{\";\\n\"}<_components.span className=\"hljs-keyword\">{\"import\"}</_components.span>{\" { \"}<_components.span className=\"hljs-title hljs-class\">{\"MetaFunction\"}</_components.span>{\", \"}<_components.span className=\"hljs-title hljs-class\">{\"Outlet\"}</_components.span>{\" } \"}<_components.span className=\"hljs-keyword\">{\"from\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"\\\"remix\\\"\"}</_components.span>{\";\\n\\n\"}<_components.span className=\"hljs-keyword\">{\"export\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"const\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"links\"}</_components.span>{\": \"}<_components.span className=\"hljs-title hljs-class\">{\"LinksFunction\"}</_components.span>{\" = \"}<_components.span className=\"hljs-function\">{\"() =>\"}</_components.span>{\" {\\n  \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" [\\n    {\\n      \"}<_components.span className=\"hljs-attr\">{\"rel\"}</_components.span>{\": \"}<_components.span className=\"hljs-string\">{\"'stylesheet'\"}</_components.span>{\",\\n      \"}<_components.span className=\"hljs-attr\">{\"href\"}</_components.span>{\": styles,\\n    },\\n  ];\\n}\\n\\n\"}<_components.span className=\"hljs-keyword\">{\"export\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"default\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"function\"}</_components.span>{\" \"}<_components.span className=\"hljs-title hljs-function\">{\"Blog\"}</_components.span>{\"(\"}<_components.span className=\"hljs-params\" />{\") {\\n  \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" (\\n    \"}<_components.span className=\"xml\"><_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Outlet\"}</_components.span>{\" />\"}</_components.span></_components.span>{\"\\n  );\\n}\\n\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Now if you're able to see all of the above code blocks with proper highlighting then I must've done it right!\"}</_components.p>{\"\\n\"}<_components.h2>{\"Where to go from here\"}</_components.h2>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"In general the site's stlyes and look/feel is still pretty plain. I'll need to improve that to something... reasonable.\"}{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Looking to add tailwind since I've been wanting to learn that anyways\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"A challenge to figure out: how to display nested attributes from the parent \"}<_components.code>{\"blog.tsx\"}</_components.code>{\"? For example what if I wanted to determine the title or date of a specific blog post so that I can render it consistently across all posts?\"}{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Actually I noticed Kent C. Dodd's blog doesn't utilize Remix's built-in MDX route modules. I have a feeling it's because of maybe one of these concerns\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"I need to improve the \"}<_components.a href=\"/blog\">{\"base blog page\"}</_components.a>{\" to dynamically determine the full list of blog posts\"}{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"I'll probably need to read from the file system then utilize frontmatter to determine titles, dates, etc.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"Anyways that's it for now!\"}</_components.p></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"first-post.mdx\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          "],
  "mappings": "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",
  "names": []
}
