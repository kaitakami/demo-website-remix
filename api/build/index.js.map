{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../app/entry.server.tsx", "route-module:/home/kai/repos/demo-website-remix/app/root.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/actions.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/correct.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/params.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/params/index.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/params/$id.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/about.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/about/index.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/demos/about/whoa.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/index.tsx", "route-module:/home/kai/repos/demo-website-remix/app/routes/blog.tsx", "mdx:/home/kai/repos/demo-website-remix/app/routes/blog/first-post.mdx", "route-module:/home/kai/repos/demo-website-remix/app/routes/blog/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/home/kai/repos/demo-website-remix/app/entry.server.tsx\";\nimport * as route0 from \"/home/kai/repos/demo-website-remix/app/root.tsx\";\nimport * as route1 from \"/home/kai/repos/demo-website-remix/app/routes/demos/actions.tsx\";\nimport * as route2 from \"/home/kai/repos/demo-website-remix/app/routes/demos/correct.tsx\";\nimport * as route3 from \"/home/kai/repos/demo-website-remix/app/routes/demos/params.tsx\";\nimport * as route4 from \"/home/kai/repos/demo-website-remix/app/routes/demos/params/index.tsx\";\nimport * as route5 from \"/home/kai/repos/demo-website-remix/app/routes/demos/params/$id.tsx\";\nimport * as route6 from \"/home/kai/repos/demo-website-remix/app/routes/demos/about.tsx\";\nimport * as route7 from \"/home/kai/repos/demo-website-remix/app/routes/demos/about/index.tsx\";\nimport * as route8 from \"/home/kai/repos/demo-website-remix/app/routes/demos/about/whoa.tsx\";\nimport * as route9 from \"/home/kai/repos/demo-website-remix/app/routes/index.tsx\";\nimport * as route10 from \"/home/kai/repos/demo-website-remix/app/routes/blog.tsx\";\nimport * as route11 from \"/home/kai/repos/demo-website-remix/app/routes/blog/first-post.mdx\";\nimport * as route12 from \"/home/kai/repos/demo-website-remix/app/routes/blog/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/demos/actions\": {\n    id: \"routes/demos/actions\",\n    parentId: \"root\",\n    path: \"demos/actions\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/demos/correct\": {\n    id: \"routes/demos/correct\",\n    parentId: \"root\",\n    path: \"demos/correct\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/demos/params\": {\n    id: \"routes/demos/params\",\n    parentId: \"root\",\n    path: \"demos/params\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/demos/params/index\": {\n    id: \"routes/demos/params/index\",\n    parentId: \"routes/demos/params\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/demos/params/$id\": {\n    id: \"routes/demos/params/$id\",\n    parentId: \"routes/demos/params\",\n    path: \":id\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  },\n  \"routes/demos/about\": {\n    id: \"routes/demos/about\",\n    parentId: \"root\",\n    path: \"demos/about\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route6\n  },\n  \"routes/demos/about/index\": {\n    id: \"routes/demos/about/index\",\n    parentId: \"routes/demos/about\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route7\n  },\n  \"routes/demos/about/whoa\": {\n    id: \"routes/demos/about/whoa\",\n    parentId: \"routes/demos/about\",\n    path: \"whoa\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route8\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route9\n  },\n  \"routes/blog\": {\n    id: \"routes/blog\",\n    parentId: \"root\",\n    path: \"blog\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route10\n  },\n  \"routes/blog/first-post\": {\n    id: \"routes/blog/first-post\",\n    parentId: \"routes/blog\",\n    path: \"first-post\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route11\n  },\n  \"routes/blog/index\": {\n    id: \"routes/blog/index\",\n    parentId: \"routes/blog\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route12\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import {\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from 'remix';\nimport type { LinksFunction } from 'remix';\n\nimport globalStylesUrl from '~/styles/global.css';\nimport darkStylesUrl from '~/styles/dark.css';\n\n// https://remix.run/api/app#links\nexport let links: LinksFunction = () => {\n  return [\n    { rel: 'stylesheet', href: globalStylesUrl },\n    {\n      rel: 'stylesheet',\n      href: darkStylesUrl,\n      media: '(prefers-color-scheme: dark)',\n    },\n  ];\n};\n\n// https://remix.run/api/conventions#default-export\n// https://remix.run/api/conventions#route-filenames\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n          <hr />\n          <p>\n            Hey, developer, you should replace this with what you want your\n            users to see.\n          </p>\n        </div>\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Parece que has entrado a una p\u00E1gina que a\u00FAn no existe.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Parece que has entrado a una p\u00E1gina que a\u00FAn no existe.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"remix-app\">\n      <header className=\"remix-app__header\">\n        <div className=\"container remix-app__header-content\">\n          <Link to=\"/\" title=\"Home\">\n            <h1 className=\"remix-app__header-home-link\">Kai Takami</h1>\n          </Link>\n          <nav aria-label=\"Main navigation\" className=\"remix-app__header-nav\">\n            <ul>\n              <li>\n                <Link to=\"/\">Inicio</Link>\n              </li>\n              <li>\n                <Link to=\"blog\">Blog</Link>\n              </li>\n              <li>\n                <a href=\"https://github.com/kaitakami/\">GitHub</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <div className=\"remix-app__main\">\n        <div className=\"container remix-app__main-content\">{children}</div>\n      </div>\n      <footer className=\"remix-app__footer\">\n        <div className=\"container remix-app__footer-content\">\n          <p>&copy; Kai Takami</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\n", "import { useEffect, useRef } from \"react\";\nimport type { ActionFunction } from \"remix\";\nimport { Form, json, useActionData, redirect } from \"remix\";\n\nexport function meta() {\n  return { title: \"Actions Demo\" };\n}\n\n// When your form sends a POST, the action is called on the server.\n// - https://remix.run/api/conventions#action\n// - https://remix.run/guides/data-updates\nexport let action: ActionFunction = async ({ request }) => {\n  let formData = await request.formData();\n  let answer = formData.get(\"answer\");\n\n  // Typical action workflows start with validating the form data that just came\n  // over the network. Clientside validation is fine, but you definitely need it\n  // server side.  If there's a problem, return the the data and the component\n  // can render it.\n  if (typeof answer !== \"string\") {\n    return json(\"Come on, at least try!\", { status: 400 });\n  }\n\n  if (answer !== \"egg\") {\n    return json(`Sorry, ${answer} is not right.`, { status: 400 });\n  }\n\n  // Finally, if the data is valid, you'll typically write to a database or send or\n  // email or log the user in, etc. It's recommended to redirect after a\n  // successful action, even if it's to the same place so that non-JavaScript workflows\n  // from the browser doesn't repost the data if the user clicks back.\n  return redirect(\"/demos/correct\");\n};\n\nexport default function ActionsDemo() {\n  // https://remix.run/api/remix#useactiondata\n  let actionMessage = useActionData<string>();\n  let answerRef = useRef<HTMLInputElement>(null);\n\n  // This form works without JavaScript, but when we have JavaScript we can make\n  // the experience better by selecting the input on wrong answers! Go ahead, disable\n  // JavaScript in your browser and see what happens.\n  useEffect(() => {\n    if (actionMessage && answerRef.current) {\n      answerRef.current.select();\n    }\n  }, [actionMessage]);\n\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <h2>Actions!</h2>\n        <p>\n          This form submission will send a post request that we handle in our\n          `action` export. Any route can export an action to handle data\n          mutations.\n        </p>\n        <Form method=\"post\" className=\"remix__form\">\n          <h3>Post an Action</h3>\n          <p>\n            <i>What is more useful when it is broken?</i>\n          </p>\n          <label>\n            <div>Answer:</div>\n            <input ref={answerRef} name=\"answer\" type=\"text\" />\n          </label>\n          <div>\n            <button>Answer!</button>\n          </div>\n          {actionMessage ? (\n            <p>\n              <b>{actionMessage}</b>\n            </p>\n          ) : null}\n        </Form>\n      </main>\n\n      <aside>\n        <h3>Additional Resources</h3>\n        <ul>\n          <li>\n            Guide:{\" \"}\n            <a href=\"https://remix.run/guides/data-writes\">Data Writes</a>\n          </li>\n          <li>\n            API:{\" \"}\n            <a href=\"https://remix.run/api/conventions#action\">\n              Route Action Export\n            </a>\n          </li>\n          <li>\n            API:{\" \"}\n            <a href=\"https://remix.run/api/remix#useactiondata\">\n              <code>useActionData</code>\n            </a>\n          </li>\n        </ul>\n      </aside>\n    </div>\n  );\n}\n", "export default function NiceWork() {\n  return <h1>You got it right!</h1>;\n}\n", "import { useCatch, Link, json, useLoaderData, Outlet } from \"remix\";\n\nexport function meta() {\n  return { title: \"Boundaries Demo\" };\n}\n\nexport default function Boundaries() {\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <Outlet />\n      </main>\n\n      <aside>\n        <h2>Click these Links</h2>\n        <ul>\n          <li>\n            <Link to=\".\">Start over</Link>\n          </li>\n          <li>\n            <Link to=\"one\">\n              Param: <i>one</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"two\">\n              Param: <i>two</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"this-record-does-not-exist\">This will be a 404</Link>\n          </li>\n          <li>\n            <Link to=\"shh-its-a-secret\">And this will be 401 Unauthorized</Link>\n          </li>\n          <li>\n            <Link to=\"kaboom\">This one will throw an error</Link>\n          </li>\n        </ul>\n      </aside>\n    </div>\n  );\n}\n", "import { useCatch, Link, json, useLoaderData, Outlet } from \"remix\";\nimport type { LoaderFunction } from \"remix\";\n\nexport default function Boundaries() {\n  return (\n    <>\n      <h2>Params</h2>\n      <p>\n        When you name a route segment with $ like{\" \"}\n        <code>routes/users/$userId.js</code>, the $ segment will be parsed from\n        the URL and sent to your loaders and actions by the same name.\n      </p>\n      <h2>Errors</h2>\n      <p>\n        When a route throws and error in it's action, loader, or component,\n        Remix automatically catches it, won't even try to render the component,\n        but it will render the route's ErrorBoundary instead. If the route\n        doesn't have one, it will bubble up to the routes above it until it hits\n        the root.\n      </p>\n      <p>So be as granular as you want with your error handling.</p>\n      <h2>Not Found</h2>\n      <p>\n        (and other{\" \"}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses\">\n          client errors\n        </a>\n        )\n      </p>\n      <p>\n        Loaders and Actions can throw a <code>Response</code> instead of an\n        error and Remix will render the CatchBoundary instead of the component.\n        This is great when loading data from a database isn't found. As soon as\n        you know you can't render the component normally, throw a 404 response\n        and send your app into the catch boundary. Just like error boundaries,\n        catch boundaries bubble, too.\n      </p>\n    </>\n  );\n}\n", "import { useCatch, Link, json, useLoaderData } from \"remix\";\nimport type { LoaderFunction, MetaFunction } from \"remix\";\n\n// The `$` in route filenames becomes a pattern that's parsed from the URL and\n// passed to your loaders so you can look up data.\n// - https://remix.run/api/conventions#loader-params\nexport let loader: LoaderFunction = async ({ params }) => {\n  // pretend like we're using params.id to look something up in the db\n\n  if (params.id === \"this-record-does-not-exist\") {\n    // If the record doesn't exist we can't render the route normally, so\n    // instead we throw a 404 reponse to stop running code here and show the\n    // user the catch boundary.\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n\n  // now pretend like the record exists but the user just isn't authorized to\n  // see it.\n  if (params.id === \"shh-its-a-secret\") {\n    // Again, we can't render the component if the user isn't authorized. You\n    // can even put data in the response that might help the user rectify the\n    // issue! Like emailing the webmaster for access to the page. (Oh, right,\n    // `json` is just a Response helper that makes it easier to send JSON\n    // responses).\n    throw json({ webmasterEmail: \"hello@remix.run\" }, { status: 401 });\n  }\n\n  // Sometimes your code just blows up and you never anticipated it. Remix will\n  // automatically catch it and send the UI to the error boundary.\n  if (params.id === \"kaboom\") {\n    lol();\n  }\n\n  // but otherwise the record was found, user has access, so we can do whatever\n  // else we needed to in the loader and return the data. (This is boring, we're\n  // just gonna return the params.id).\n  return { param: params.id };\n};\n\nexport default function ParamDemo() {\n  let data = useLoaderData();\n  return (\n    <h1>\n      The param is <i style={{ color: \"red\" }}>{data.param}</i>\n    </h1>\n  );\n}\n\n// https://remix.run/api/conventions#catchboundary\n// https://remix.run/api/remix#usecatch\n// https://remix.run/api/guides/not-found\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message: React.ReactNode;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Looks like you tried to visit a page that you do not have access to.\n          Maybe ask the webmaster ({caught.data.webmasterEmail}) for access.\n        </p>\n      );\n    case 404:\n      message = (\n        <p>Looks like you tried to visit a page that does not exist.</p>\n      );\n    default:\n      message = (\n        <p>\n          There was a problem with your request!\n          <br />\n          {caught.status} {caught.statusText}\n        </p>\n      );\n  }\n\n  return (\n    <>\n      <h2>Oops!</h2>\n      <p>{message}</p>\n      <p>\n        (Isn't it cool that the user gets to stay in context and try a different\n        link in the parts of the UI that didn't blow up?)\n      </p>\n    </>\n  );\n}\n\n// https://remix.run/api/conventions#errorboundary\n// https://remix.run/api/guides/not-found\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <>\n      <h2>Error!</h2>\n      <p>{error.message}</p>\n      <p>\n        (Isn't it cool that the user gets to stay in context and try a different\n        link in the parts of the UI that didn't blow up?)\n      </p>\n    </>\n  );\n}\n\nexport let meta: MetaFunction = ({ data }) => {\n  return {\n    title: data ? `Param: ${data.param}` : \"Oops...\",\n  };\n};\n", "import { Outlet } from \"remix\";\nimport type { MetaFunction, LinksFunction } from \"remix\";\n\nimport stylesUrl from \"~/styles/demos/about.css\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"About Remix\"\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"about\">\n      <div className=\"about__intro\">\n        <h2>About Us</h2>\n        <p>\n          Ok, so this page isn't really <em>about us</em>, but we did want to\n          show you a few more things Remix can do.\n        </p>\n        <p>\n          Did you notice that things look a little different on this page? The\n          CSS that we import in the route file and include in its{\" \"}\n          <code>links</code> export is only included on this route and its\n          children.\n        </p>\n        <p>\n          Wait a sec...<em>its children</em>? To understand what we mean by\n          this,{\" \"}\n          <a href=\"https://remix.run/tutorial/4-nested-routes-params\">\n            read all about nested routes in the docs\n          </a>\n          .\n        </p>\n        <hr />\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"remix\";\n\nexport default function AboutIndex() {\n  return (\n    <div>\n      <p>\n        You are looking at the index route for the <code>/about</code> URL\n        segment, but there are nested routes as well!\n      </p>\n      <p>\n        <strong>\n          <Link to=\"whoa\">Check out one of them here.</Link>\n        </strong>\n      </p>\n    </div>\n  );\n}\n", "import { Link } from \"remix\";\n\nexport default function AboutIndex() {\n  return (\n    <div>\n      <p>\n        Whoa, this is a nested route! We render the <code>/about</code> layout\n        route component, and its <code>Outlet</code> renders our route\n        component. \uD83E\uDD2F\n      </p>\n      <p>\n        <strong>\n          <Link to=\"..\">\n            Go back to the <code>/about</code> index.\n          </Link>\n        </strong>\n      </p>\n    </div>\n  );\n}\n", "import type { MetaFunction, LoaderFunction } from \"remix\";\nimport { useLoaderData, json, Link } from \"remix\";\n\ntype IndexData = {\n  resources: Array<{ name: string; url: string }>;\n  demos: Array<{ name: string; to: string }>;\n};\n\n// Loaders provide data to components and are only ever called on the server, so\n// you can connect to a database or run any server side code you want right next\n// to the component that renders it.\n// https://remix.run/api/conventions#loader\nexport let loader: LoaderFunction = () => {\n  let data: IndexData = {\n    resources: [\n      {\n        name: \"Remix Docs\",\n        url: \"https://remix.run/docs\"\n      },\n      {\n        name: \"React Router Docs\",\n        url: \"https://reactrouter.com/docs\"\n      },\n      {\n        name: \"Remix Discord\",\n        url: \"https://discord.gg/VBePs6d\"\n      }\n    ],\n    demos: [\n      {\n        to: \"demos/actions\",\n        name: \"Actions\"\n      },\n      {\n        to: \"demos/about\",\n        name: \"Nested Routes, CSS loading/unloading\"\n      },\n      {\n        to: \"demos/params\",\n        name: \"URL Params and Error Boundaries\"\n      }\n    ]\n  };\n\n  // https://remix.run/api/remix#json\n  return json(data);\n};\n\n// https://remix.run/api/conventions#meta\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Marius Espejo\",\n    description: \"Marius Espejo's personal site\"\n  };\n};\n\n// https://remix.run/guides/routing#index-routes\nexport default function Index() {\n  let data = useLoaderData<IndexData>();\n\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <h2>This site is a work in progress.</h2>\n        <p>\n          Trying to learn some Remix! \uD83D\uDE04\n        </p>\n      </main>\n      {/* <aside>\n        <h2>Demos In This App</h2>\n        <ul>\n          {data.demos.map(demo => (\n            <li key={demo.to} className=\"remix__page__resource\">\n              <Link to={demo.to} prefetch=\"intent\">\n                {demo.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <h2>Resources</h2>\n        <ul>\n          {data.resources.map(resource => (\n            <li key={resource.url} className=\"remix__page__resource\">\n              <a href={resource.url}>{resource.name}</a>\n            </li>\n          ))}\n        </ul>\n      </aside> */}\n    </div>\n  );\n}\n", "import styles from 'highlight.js/styles/github-dark-dimmed.css';\nimport type { LinksFunction, LoaderFunction } from 'remix';\nimport { MetaFunction, Outlet } from \"remix\";\n\nexport let loader: LoaderFunction = (whatthis) => {\n  return null;\n}\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: styles,\n    },\n  ];\n}\n\nexport default function Blog() {\n  return (\n    <Outlet />\n  );\n}\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Blog | Marius Espejo\",\n    description: \"Blog posts by Marius Espejo\"\n  };\n};", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"title\": \"My first about post about... making my first post!\",\n  \"date\": new Date(1639440000000),\n  \"meta\": {\n    \"title\": \"My First Post\",\n    \"description\": \"cool!\"\n  }\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    span: \"span\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.h2>{\"My first about post about... making my first post!\"}</_components.h2>{\"\\n\"}{attributes.date.toDateString()}{\"\\n\"}<_components.h3>{\"First of all how did I get this page to render?\"}</_components.h3>{\"\\n\"}<_components.p>{\"Remix has \"}<_components.a href=\"https://remix.run/docs/en/v1/guides/mdx\">{\"built-in support for MDX\"}</_components.a>{\", it automatically will treat each \"}<_components.code>{\".mdx\"}</_components.code>{\" file witin \"}<_components.code>{\"/routes\"}</_components.code>{\" like a route module. Just like regular components.\\nBasically that means an MDX file is automatically a page! There's really not much work to do.\"}</_components.p>{\"\\n\"}<_components.h3>{\"Syntax Highlighting\"}</_components.h3>{\"\\n\"}<_components.p>{\"The only thing I really needed to setup was some syntax highlighting, e.g. you should notice the following code block should already be pre-styled with my currently selected theme:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-js\"><_components.span className=\"hljs-keyword\">{\"function\"}</_components.span>{\" \"}<_components.span className=\"hljs-title hljs-function\">{\"helloWorld\"}</_components.span>{\"(\"}<_components.span className=\"hljs-params\" />{\") {\\n  \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"'hello!'\"}</_components.span>{\";\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"To achieve this first of all I had to update the base \"}<_components.code>{\"remix.config.js\"}</_components.code>{\" to now have the \"}<_components.code>{\"mdx\"}</_components.code>{\" property.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-js\"><_components.span className=\"hljs-variable hljs-language\">{\"module\"}</_components.span>{\".\"}<_components.span className=\"hljs-property\">{\"exports\"}</_components.span>{\" = {\\n  \"}<_components.span className=\"hljs-comment\">{\"// ... existing config here\"}</_components.span>{\"\\n  \"}<_components.span className=\"hljs-attr\">{\"mdx\"}</_components.span>{\": \"}<_components.span className=\"hljs-keyword\">{\"async\"}</_components.span>{\" (filename) => {\\n    \"}<_components.span className=\"hljs-keyword\">{\"const\"}</_components.span>{\" [rehypeHighlight] = \"}<_components.span className=\"hljs-keyword\">{\"await\"}</_components.span>{\" \"}<_components.span className=\"hljs-title hljs-class\">{\"Promise\"}</_components.span>{\".\"}<_components.span className=\"hljs-title hljs-function\">{\"all\"}</_components.span>{\"([\\n      \"}<_components.span className=\"hljs-title hljs-function\">{\"import\"}</_components.span>{\"(\"}<_components.span className=\"hljs-string\">{\"'rehype-highlight'\"}</_components.span>{\").\"}<_components.span className=\"hljs-title hljs-function\">{\"then\"}</_components.span>{\"(\"}<_components.span className=\"hljs-function\">{\"(\"}<_components.span className=\"hljs-params\">{\"mod\"}</_components.span>{\") =>\"}</_components.span>{\" mod.\"}<_components.span className=\"hljs-property\">{\"default\"}</_components.span>{\"),\\n    ]);\\n    \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" {\\n      \"}<_components.span className=\"hljs-attr\">{\"rehypePlugins\"}</_components.span>{\": [rehypeHighlight],\\n    };\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Notice that we are using \"}<_components.code>{\"rehype-highlight\"}</_components.code>{\" as a plugin which ultimately will use \"}<_components.code>{\"highlight.js\"}</_components.code>{\" behind the scenes to transform our html.\"}</_components.p>{\"\\n\"}<_components.p>{\"There are actually other ways to do this, for example you could also use a remark plugin instead or a plugin which uses PrismJS.\\nHonestly this MDX ecosystem is still very new to me so I'm not quite sure yet what's the best approach. Will look into that more later!\"}</_components.p>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"rehype-highlight\"}</_components.code>{\" plugin was the example used in the docs so I just ran with it.\"}</_components.p>{\"\\n\"}<_components.p>{\"Anyways, once you have that config change I then started configuring my blog routing.\"}</_components.p>{\"\\n\"}<_components.h3>{\"Let's take a moment to talk about the routing\"}</_components.h3>{\"\\n\"}<_components.p>{\"As an example I currently (at the time of writing) have the following files:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-bash\">{\"app/routes/blog.tsx --> The layout \"}<_components.span className=\"hljs-string\">{\"\\\"parent\\\"\"}</_components.span>{\"\\napp/routes/blog/index.tsx --> The \"}<_components.span className=\"hljs-string\">{\"\\\"index route\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"for\"}</_components.span>{\" /blog\\napp/routes/blog/first-post.mdx --> The post you\"}<_components.span className=\"hljs-string\">{\"'re reading!\\n\"}</_components.span></_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The distinction between \"}<_components.code>{\"blog.tsx\"}</_components.code>{\" and \"}<_components.code>{\"blog/index.tsx\"}</_components.code>{\" here was initially very confusing to me.\\nHowever it started to make a little bit more sense when I remeber how the same sort of ideas work with React Route 6.\"}</_components.p>{\"\\n\"}<_components.p>{\"For example in React Router that routing might look like this:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-jsx\">{\"<\"}<_components.span className=\"hljs-title hljs-class\">{\"Routes\"}</_components.span>{\">\\n  \"}<_components.span className=\"xml\"><_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"path\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"\\\"/\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"App\"}</_components.span>{\" />\"}</_components.span>{\"}>\\n    \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"index\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"Home\"}</_components.span>{\" />\"}</_components.span>{\"} />\\n    \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"path\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"\\\"blog\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"Blog\"}</_components.span>{\" />\"}</_components.span>{\"}>\\n      \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"path\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"\\\"first-post\\\"\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"FirstPost\"}</_components.span>{\" />\"}</_components.span>{\"} />\\n      \"}<_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"index\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"element\"}</_components.span>{\"=\"}<_components.span className=\"hljs-string\">{\"{\"}</_components.span>{\"<\"}<_components.span className=\"hljs-attr\">{\"BlogIndex\"}</_components.span>{\" />\"}</_components.span>{\"} />\\n    \"}<_components.span className=\"hljs-tag\">{\"</\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\">\"}</_components.span>{\"\\n  \"}<_components.span className=\"hljs-tag\">{\"</\"}<_components.span className=\"hljs-name\">{\"Route\"}</_components.span>{\">\"}</_components.span></_components.span>{\"\\n</\"}<_components.span className=\"hljs-title hljs-class\">{\"Routes\"}</_components.span>{\">\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"In the above example the element \"}<_components.code>{\"<Blog />\"}</_components.code>{\" basically houses the common layout/logic for all of the children below it. It specifically needs to render an \"}<_components.code>{\"<Outlet />\"}</_components.code>{\" to define where the nested routes will render.\\nThat's basically the same exact idea here in Remix, except that structure is being defined using the file system. Once I wrapped my head around that it made a litte bit more sense.\"}</_components.p>{\"\\n\"}<_components.h3>{\"Now back to syntax highlighting...\"}</_components.h3>{\"\\n\"}<_components.p>{\"Now that we have that structure in place, the only thing left to do is setup up our \"}<_components.code>{\"highlight.js\"}</_components.code>{\" CSS file to specifically load in \"}<_components.em>{\"only\"}</_components.em>{\" for our blog routing. This is because we likely won't need those styles anywhere else but in the blog posts.\"}</_components.p>{\"\\n\"}<_components.p>{\"In addition to that Remix seems to optimize what CSS is sent \"}<_components.em>{\"per page\"}</_components.em>{\". Meaning to enable our syntax highlighting we'd have to include the styles in each page. That seems overkill, so instead we're going to load it inside our \"}<_components.code>{\"blog.tsx\"}</_components.code>{\" (which again remember wraps the underlying nested children) so that we only define it once across all blog posts.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"hljs language-ts\"><_components.span className=\"hljs-keyword\">{\"import\"}</_components.span>{\" styles \"}<_components.span className=\"hljs-keyword\">{\"from\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"'highlight.js/styles/github-dark-dimmed.css'\"}</_components.span>{\"; \"}<_components.span className=\"hljs-comment\">{\"// change this to your desired theme\"}</_components.span>{\"\\n\"}<_components.span className=\"hljs-keyword\">{\"import\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"type\"}</_components.span>{\" { \"}<_components.span className=\"hljs-title hljs-class\">{\"LinksFunction\"}</_components.span>{\", \"}<_components.span className=\"hljs-title hljs-class\">{\"LoaderFunction\"}</_components.span>{\" } \"}<_components.span className=\"hljs-keyword\">{\"from\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"'remix'\"}</_components.span>{\";\\n\"}<_components.span className=\"hljs-keyword\">{\"import\"}</_components.span>{\" { \"}<_components.span className=\"hljs-title hljs-class\">{\"MetaFunction\"}</_components.span>{\", \"}<_components.span className=\"hljs-title hljs-class\">{\"Outlet\"}</_components.span>{\" } \"}<_components.span className=\"hljs-keyword\">{\"from\"}</_components.span>{\" \"}<_components.span className=\"hljs-string\">{\"\\\"remix\\\"\"}</_components.span>{\";\\n\\n\"}<_components.span className=\"hljs-keyword\">{\"export\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"const\"}</_components.span>{\" \"}<_components.span className=\"hljs-attr\">{\"links\"}</_components.span>{\": \"}<_components.span className=\"hljs-title hljs-class\">{\"LinksFunction\"}</_components.span>{\" = \"}<_components.span className=\"hljs-function\">{\"() =>\"}</_components.span>{\" {\\n  \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" [\\n    {\\n      \"}<_components.span className=\"hljs-attr\">{\"rel\"}</_components.span>{\": \"}<_components.span className=\"hljs-string\">{\"'stylesheet'\"}</_components.span>{\",\\n      \"}<_components.span className=\"hljs-attr\">{\"href\"}</_components.span>{\": styles,\\n    },\\n  ];\\n}\\n\\n\"}<_components.span className=\"hljs-keyword\">{\"export\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"default\"}</_components.span>{\" \"}<_components.span className=\"hljs-keyword\">{\"function\"}</_components.span>{\" \"}<_components.span className=\"hljs-title hljs-function\">{\"Blog\"}</_components.span>{\"(\"}<_components.span className=\"hljs-params\" />{\") {\\n  \"}<_components.span className=\"hljs-keyword\">{\"return\"}</_components.span>{\" (\\n    \"}<_components.span className=\"xml\"><_components.span className=\"hljs-tag\">{\"<\"}<_components.span className=\"hljs-name\">{\"Outlet\"}</_components.span>{\" />\"}</_components.span></_components.span>{\"\\n  );\\n}\\n\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Now if you're able to see all of the above code blocks with proper highlighting then I must've done it right!\"}</_components.p>{\"\\n\"}<_components.h2>{\"Where to go from here\"}</_components.h2>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"In general the site's stlyes and look/feel is still pretty plain. I'll need to improve that to something... reasonable.\"}{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Looking to add tailwind since I've been wanting to learn that anyways\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"A challenge to figure out: how to display nested attributes from the parent \"}<_components.code>{\"blog.tsx\"}</_components.code>{\"? For example what if I wanted to determine the title or date of a specific blog post so that I can render it consistently across all posts?\"}{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Actually I noticed Kent C. Dodd's blog doesn't utilize Remix's built-in MDX route modules. I have a feeling it's because of maybe one of these concerns\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"I need to improve the \"}<_components.a href=\"/blog\">{\"base blog page\"}</_components.a>{\" to dynamically determine the full list of blog posts\"}{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"I'll probably need to read from the file system then utilize frontmatter to determine titles, dates, etc.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"Anyways that's it for now!\"}</_components.p></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"first-post.mdx\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          ", "import { Link } from 'remix';\n\nexport default function BlogIndex() {\n  return (\n    <div>\n      <h2>I should probably list out the articles here eh?</h2>\n      Here you go.\n      <ul>\n        <li>\n          <Link to=\"first-post\">First Post</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
